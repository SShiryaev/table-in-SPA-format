version: "3"

services:

  db:
    image: postgres:16-alpine
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - table-network

  backend:
    build: .
    tty: true
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py migrate &&
             python manage.py generate_data &&
             python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8000/api/health/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - table-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - backend
    volumes:
      - ./client/nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - .env
    expose:
      - "80"
    networks:
      - table-network

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    depends_on:
      - backend
      - client
    networks:
      - table-network

volumes:
  pg_data:
    driver: local

networks:
  table-network:
    driver: bridge